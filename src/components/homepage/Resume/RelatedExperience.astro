---
import classNames from 'classnames';
import Text from '../../Text.astro';
import PlainList from '../../PlainList.astro';
import type { RelatedExperience } from './ResumeTypes.astro';
import Spacer from './Spacer.astro';
import RelatedExperienceTitle from './RelatedExperienceTitle.astro';
import type { Props as SpacerProps } from './Spacer.astro';

export interface Props extends Omit<SpacerProps, 'slot' | 'title' | 'role'>, RelatedExperience {}

const { as = 'article', class: className, title, meta, role, website, accomplishments, ...rest } = Astro.props;
const classes = classNames('related-experience', className);
---

<Spacer class={classes} {...rest} as={as}>
  <hgroup>
    {
      website?.url ? (
        <a href={website.url}>
          <RelatedExperienceTitle as="h4" class="title" title={title} yearFrom={role.yearFrom} yearTo={role.yearFrom} />
        </a>
      ) : (
        <RelatedExperienceTitle as="h4" class="title" title={title} yearFrom={role.yearFrom} yearTo={role.yearFrom} />
      )
    }

    {
      meta && (
        <Text small as="p" data-meta class="meta">
          {meta}
        </Text>
      )
    }
    <Text as="h5" data-role-title class="role">
      {role.title}
    </Text>
  </hgroup>
  {
    accomplishments.length > 0 && (
      <div>
        <PlainList>
          {accomplishments.map((accomplishment) => (
            <li>{accomplishment}</li>
          ))}
        </PlainList>
      </div>
    )
  }
</Spacer>
<style>
  .related-experience {
    break-inside: avoid;
  }
  .related-experience:not(:last-of-type) {
    page-break-before: left;
  }

  .title {
    margin-block-end: 0.125rem;
  }

  .title-content {
    font-weight: var(--font-header-weight-bold);
  }

  .meta {
    margin-block-end: 0;
  }

  .role {
    color: var(--color-brand);
    margin-block-end: 0.5rem;
  }
</style>
