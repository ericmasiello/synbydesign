---
import classNames from 'classnames';
import H from '../../H.astro';
import Text from '../../Text.astro';
import { EMAIL } from '../../../config';

export interface Props extends Omit<astroHTML.JSX.BaseHTMLAttributes, 'slot'> {
  as?: keyof HTMLElementTagNameMap;
  ownerName: string;
  ownerTitle: string;
  lead: string;
  email?: string;
}

const { as: Element = 'hgroup', ownerName, ownerTitle, lead, email, class: className, ...rest } = Astro.props;
const classes = classNames('header', className);
const nameClasses = classNames('name', { 'with-email': Boolean(email) });
---

<Element class={classes} {...rest}>
  <H level={4} as="h3" class={nameClasses}
    >{ownerName}
    {
      email ? (
        <Text as="a" href={`mailto:${EMAIL}`}>
          {EMAIL}
        </Text>
      ) : null
    }
  </H>
  <H level={6} as="h4" class="title">{ownerTitle}</H>
  <p>{lead}</p>
</Element>

<style>
  .header {
    background: linear-gradient(90deg, rgba(78, 0, 94, 0.95) 14%, rgba(19, 52, 185, 0.95) 100%);
    color: #fff;
    padding: var(--resume-v-gap) var(--resume-h-gap);
    margin-inline-start: calc(var(--resume-h-gap) * -1);
    margin-inline-end: calc(var(--resume-h-gap) * -1);
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
  }

  .name {
    margin-bottom: 0;
  }

  .name:where(.with-email) {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
  }

  a {
    color: var(--color-bg);
  }

  .title {
    margin-bottom: 0.25rem;
    color: var(--color-brand-invert);
  }
</style>
