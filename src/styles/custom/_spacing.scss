// *********************************
// Creates REM widths based on
// $base-font-size
// *********************************

@mixin width( $size ) {

  width: $size;
  width: ($size / $base-font-size) * 1rem;
}


// $box-size : margin or padding
// $p1 : p/m
// $p2 : a/v/h/t/l/r/b
// $p3 : xl/l/ml/m/s/n

@mixin spacing-rule($p1, $p2, $p3, $unit-default: 1rem) {

  $boxSide: "margin";
  $multiplier: 0;

  @if $p3 == xl {
    $multiplier: 3;
  }
  @else if $p3 == l {
    $multiplier: 2;
  }
  @else if $p3 == ml {
    $multiplier: 1.5;
  }
  @else if $p3 == m {
    $multiplier: 1;
  }
  @else if $p3 == s {
    $multiplier: 0.5;
  }

  @if $p1 == p {
    $boxSide: "padding";
  }

  // .#{$p1}#{$p2}#{$p3}--child does not follow BEM standards. Will phase out
  .#{$p1}#{$p2}#{$p3},
  .#{$p1}#{$p2}#{$p3}-children > * {

    @if $p2 == a or $p2 == v or $p2 == b {
      #{$boxSide}-bottom: #{$unit-default * $multiplier} !important;
    }

    @if $p2 == a or $p2 == v or $p2 == t {
      #{$boxSide}-top: #{$unit-default * $multiplier} !important;
    }

    @if $p2 == a or $p2 == h or $p2 == l {
      #{$boxSide}-left: #{$unit-default * $multiplier} !important;
    }

    @if $p2 == a or $p2 == h or $p2 == r {
      #{$boxSide}-right: #{$unit-default * $multiplier} !important;
    }
  }
}

/*------------------------------------*\
    $PADDING HELPERS
\*------------------------------------*/

// (P)adding or (M)argin
// (A)all/(V)ertical/(H)orizontal/(T)op/(L)eft/(R)ight/(B)ottom
// XL/L/ML/M/S/N

@each $p1 in m, p {
  @each $p2 in a, v, h, t, l, r, b {
    @each $p3 in xl, l, ml, m, s, n {
      @include spacing-rule($p1, $p2, $p3);
    }
  }
}
